<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- <bean id="tv" class="polymorphism01.SamsungTV" /> -->
	<bean id="tv" class="polymorphism01.LgTV" lazy-init="true"/> <!-- => LgTV tv = new LgTV; -->
										<!-- 스프링 컨테이너 구동 후 객체 요청 시 생성(lazy-init) -->
	
	<!-- bean 태그 속성
	- id 속성 : 요청(호출) 시 사용할 명칭(유일한 명칭)
	- class 속성 : 필수 속성, 대상 클래스(패키지.클래스명)
	- lazy-init : 생성 시기 설정 가능
		(기본은 컨테이너 구동 시 객체를 생성, 그러나 lazy-init="true" 설정 시, 요청하는 타이밍에 생성)
	- scope : 객체 생성 형태 정의(default singleton : 하나의 객체를 생성하여 사용)
		prototype - 객체를 요청할 때 마다 새로운 객체를 생성(객체의 주소 값이 상이해짐)
				  - 생성 시점이 객체 요청 시점으로 변화(lazy-init 속성을 기본으로 가짐)
		(단, prototype scope인 경우, destroy-method가 적용되지 않음. finalize를 사용하지 않아서?(gc가 해제하기 때문?))
	- init-method : 객체 생성 후 초기화 필요 시 해당 메소드에서 처리
	- destroy-method : 객체 소멸 시 처리할 작업을 설정하기 위한 메소드 -> prototype 속성이 있는 경우, 호출되지 않음.(default - 컨테이너 구동 종료 후 동작)
	-->
	
	<bean id="tv2Samsung" class="polymorphism02.SamsungTV"
		init-method="initMethod" destroy-method="destroyMethod"
		scope="prototype"/>
	
	<!-- 컨테이너 구동 시 객체를 생성하지 않고 최초 요청 시 객체를 생성 -->
	<bean id="tv2Lg" class="polymorphism02.LgTV" 
		init-method="initMethod" destroy-method="destroyMethod"
		lazy-init="true"/>
	
</beans>
