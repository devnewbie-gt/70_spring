<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- annotation 설정된 클래스의 객체 생성을 위한 설정
		1. namespace 추가 : context(xmlns : context)
		2. <context:component-scan> 태그 설정으로 탐색 위치 지정
			- base-package 속성 : 컴포넌트 annotation을 탐색할 위치(작성된 패키지) 지정
			  (설정된 패키지 포함 하위 패키지를 모두 검색)
	-->
	<context:component-scan base-package="com.spring.biz" />
	
	<!-- === AOP 설정(xmlns:aop 추가) === -->
	<!-- *Impl 클래스의 모든 메소드 실행 전에 LogAdvice.pringLog() 실행 -->
	<!--
	<bean id="log" class="com.spring.biz.common.LogAdvice" />
	<aop:config>
		<aop:pointcut expression="execution(* com.spring.biz..*Impl.*(..))" id="allPointcut"/> -->
										<!-- return 타입 패키지..클래스명(Impl로 끝나는 클래스).*(모든 메소드)(파라미터) -->
	<!-- 	<aop:aspect ref="log">
			<aop:before pointcut-ref="allPointcut" method="printLog"/>
		</aop:aspect>
	</aop:config>
	-->
	
	<!-- Log4jAdvicce 클래스를 사용하여 로그 남기기 -->
	<bean id="log4j" class="com.spring.biz.common.Log4jAdvice" />
	<aop:config>
		<!-- pointcut : 핵심 관심 중 AOP 적용 대상으로 선정할 메소드 지정 -->
		<aop:pointcut expression="execution(* com.spring.biz..*Impl.*(..))" id="allPointcut"/>
		<aop:pointcut expression="execution(* com.spring.biz..*Impl.get*(..))" id="getPointcut"/><!-- get으로 시작하는 메소드만 적용 -->
		
		<!-- aspect : 적용 대상(pointcut)과 적용할 횡단관심(advice) 연결 -->
		<aop:aspect ref="log4j">
			<aop:before pointcut-ref="getPointcut" method="printLogging"/>
		</aop:aspect>
	</aop:config>
	
</beans>
